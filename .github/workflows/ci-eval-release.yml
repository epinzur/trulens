name: Release CI

on:
  push:
    branches:
      - releases/*

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        include:
          - python-version: '3.11'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: true

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: trulens-llm

      - name: Install Pip Packages
        run: |
          conda activate trulens-llm
          cd ./trulens_eval
          pip install -e .
          pip install -r tests/docs_notebooks/requirements.txt
          pip install yapf==0.32.0 isort==5.10.1 ipykernel
          python -m ipykernel install --user --name trulens-llm --display-name trulens-llm
        shell: bash -el {0}

      - name: Format Code and Check for Diffs
        run: |
          conda activate trulens-llm
          echo Using $(yapf --version) and isort $(isort --vn)
          ./format.sh --eval
          num_changed_files=`git ls-files --others -m --exclude-standard ./trulens_eval | wc -l`
          if [ $num_changed_files -ne 0 ]; then
            echo "The following files have changed after running format.sh. Please format your code and update the PR."
            git ls-files --others -m --exclude-standard ./trulens_eval
            git diff
          fi
        shell: bash -el {0}

      - name: Run Combine Docs for Testing
        run: |
          conda activate trulens-llm
          cd ./docs/trulens_eval
          pip install jupyter nbmerge
          ../../.github/workflows/combine_nb_to_docs_testing.sh
        shell: bash -el {0}

      - name: Install Optional Dependencies and List Environment
        run: |
          conda activate trulens-llm
          cd ./trulens_eval
          pip install pytest==7.0.1 pytest-azurepipelines
          pip install -r trulens_eval/requirements.optional.txt
          echo "$(python --version)"
          echo "$(pip list)"
        shell: bash -el {0}

      - name: Run E2E Tests
        run: |
          conda activate trulens-llm
          cd ./trulens_eval
          python -m pytest tests/e2e
        shell: bash -el {0}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENV: "us-west1-gcp-free"
          HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACE_API_KEY }}

      - name: Run Notebook Tests
        run: |
          conda activate trulens-llm
          cd ./trulens_eval
          python -m pytest tests/docs_notebooks
        shell: bash -el {0}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENV: "us-west1-gcp-free"
          HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACE_API_KEY }}

  release:
    needs: tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        include:
          - python-version: '3.11'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: true
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: myenv
      - name: Do Release
        run: |
          conda activate myenv
          cd ./trulens_eval
          pip install twine
          make clean
          make build
          make upload
        shell: bash -el {0}
        env:
          TOKEN: ${{ secrets.PYPI_UPLOAD_TOKEN }}

